<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<rfc category="std" docName="draft-melnikov-precis-saslprepbis-00" ipr="trust200902" obsoletes="4013">

  <front>

    <title abbrev="SASLprep Bis">Username and Password Preparation Algorithms</title>

    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>1899 Wynkoop Street, Suite 600</street>
          <city>Denver</city>
          <region>CO</region>
          <code>80202</code>
          <country>USA</country>
        </postal>
        <phone>+1-303-308-3282</phone>
        <email>psaintan@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Melnikov" fullname="Alexey Melnikov">
      <organization>Isode Ltd</organization>
      <address>
        <postal>
          <street>5 Castle Business Village</street>
          <street>36 Station Road</street>
          <city>Hampton</city>
          <region>Middlesex</region>
          <code>TW12 2BX</code>
          <country>UK</country>
        </postal>
        <email>Alexey.Melnikov@isode.com</email>
      </address>
    </author>

    <date year="2012"/>

    <area>Applications</area>
    <workgroup>Precis</workgroup>
    <keyword>Username</keyword>
    <keyword>Password</keyword>
    <keyword>Unicode</keyword>
    <keyword>SASLprep</keyword>

    <abstract>
      <t>
        This document describes how to prepare Unicode strings representing
        user names and passwords, primarily for purposes of comparison.
        This profile is intended to be used by
        Simple Authentication and Security Layer (SASL) mechanisms (such as
        PLAIN and SCRAM-SHA-1), as well as other protocols that
        exchange simple user names or passwords.  This document obsoletes RFC 
        4013.</t>
    </abstract>

  </front>

  <middle>

  <section title="Introduction" anchor="intro">

    <section title="Overview" anchor="overview">

      <t>
      The use of simple user names and passwords in authentication and
      authorization is pervasive on the Internet.  To increase the
      likelihood that user name and password input and comparison both work in
      ways that make sense for typical users throughout the world, this
      document defines rules for preparing internationalized user names and
      passwords, primarily for purposes of comparison.
      </t>

      <t>
      The algorithms defined in this document assume that all strings 
      are comprised of characters from the Unicode <xref target="UNICODE"/> 
      character set.
      </t>

      <t>
      The Unicode string preparation algorithms are designed for use in Simple Authentication and Security
      Layer (<xref target="SASL"/>) mechanisms, such as <xref target="RFC4616">PLAIN</xref> and <xref target="RFC5802">SCRAM-SHA-1</xref>.
      They may be applicable where simple user names and
      passwords are used.  This profile is not intended for use in
      preparing identity strings that are not simple user names (e.g.,
      email addresses, domain names, distinguished names), nor in cases where
      identity or password strings are not character data or require
      different handling (e.g., case folding).</t>

      <t>The PRECIS approach differs fundamentally from the stringprep approach taken in RFC 4013.  The primary difference is that stringprep profiles allow all characters except those which are explicitly disallowed, whereas PRECIS profiles disallow all characters except those which are explicitly allowed (this "inclusion model" was originally used in <xref target='IDNA-PROTO'/>, see <xref target='IDNA-RATIONALE'/> for further discussion).  One result is that rarely-used Unicode characters or blocks (e.g., surrogate code points) do not need to be listed individually, since they are disallowed by default.  It is important to keep this distinction in mind when comparing this document to RFC 4013.</t>

      <t>This document obsoletes RFC 4013.</t>
    </section>

    <section title="Terminology" anchor="terms">
      <t>Many important terms used in this document are defined in <xref target='FRAMEWORK'/>, <xref target='I18N-TERMS'/>, <xref target='IDNA-DEFS'/>, and <xref target='UNICODE'/>.</t>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target='KEYWORDS'/>.</t>
    </section>

  </section>




<!--
    2.1.  Mapping

    This profile specifies:

    -  non-ASCII space characters [StringPrep, C.1.2] that can be
    mapped to SPACE (U+0020), and

    -  the "commonly mapped to nothing" characters [StringPrep, B.1]
    that can be mapped to nothing.

    2.2.  Normalization

NOTENOTENOTE Need to explain the change from NFC to NFKC?
    This profile specifies using Unicode normalization form KC, as
    described in Section 4 of [StringPrep].

    2.3.  Prohibited Output

    This profile specifies the following characters as prohibited input:

    - Non-ASCII space characters [StringPrep, C.1.2]
    - ASCII control characters [StringPrep, C.2.1]
    - Non-ASCII control characters [StringPrep, C.2.2]
    - Private Use characters [StringPrep, C.3]
    - Non-character code points [StringPrep, C.4]
    - Surrogate code points [StringPrep, C.5]
    - Inappropriate for plain text characters [StringPrep, C.6]
    - Inappropriate for canonical representation characters
    [StringPrep, C.7]
    - Change display properties or deprecated characters
    [StringPrep, C.8]
    - Tagging characters [StringPrep, C.9]

    2.4.  Bidirectional Characters

    This profile specifies checking bidirectional strings as described in
    [StringPrep, Section 6].

    2.5.  Unassigned Code Points

    This profile specifies the [StringPrep, A.1] table as its list of
    unassigned code points.
-->

<!--NameClass definition from draft-ietf-precis-framework-01.txt:

    3.1.1.  Valid

    o  Letters and numbers, i.e., the LetterDigits ("A") category first
    defined in [RFC5892] and listed here under Section 6.1.
    o  Code points in the range U+0021 through U+007E, i.e., the ASCII7
    ("K") rule defined under Section 6.11.  These code points are
    valid even if they would otherwise be disallowed according to the
    property-based rules specified in the next section.

    3.1.2.  Disallowed

    o  Control characters, i.e., the Controls ("L") category defined
    under Section 6.12.
    o  Space characters, i.e., the Spaces ("N") category defined under
    Section 6.14.
    o  Symbol characters, i.e., the Symbols ("O") category defined under
    Section 6.15.
    o  Punctuation characters, i.e., the Punctuation ("P") category
    defined under Section 6.16.
    
    o  Any character that has a compatibility equivalent, i.e., the
    HasCompat ("Q") category defined under Section 6.17.  These code
    points are disallowed even if they would otherwise be valid
    according to the property-based rules specified in the previous
    section.
NOTENOTENOTE This is a change from SASLprep    
    
-->
    
    <section title='User Name Preparation' anchor='username-prep'>

      <t>
        A user name MUST be processed as follows,
        where the operations specified MUST be completed in the order shown (note that some steps can be combined
        and performed at the same time):
      </t>
      <t>
        <list style='numbers'>

          <t>(MAPPING 1) 
            Non-ASCII space characters from the "N" category defined under Section 6.14 of <xref target='FRAMEWORK'/>
            MUST be mapped to SPACE (U+0020).
            <vspace blankLines='1'/>
          </t>

          <t>(MAPPING 2) 
            Characters from the "M" category defined under Section 6.13 MUST be mapped to nothing (this category includes all of the "characters commonly mapped to nothing" from Appendix B.1 of <xref target='STRINGPREP'/>), except U+1806 MONGOLIAN TODO SOFT HYPHEN).
            <vspace blankLines='1'/>
          </t>

          <t>(MAPPING 3)
            Uppercase and titlecase characters MUST be mapped to their lowercase equivalents.

            <vspace blankLines='1'/>

            [[NOTE: This differs from SASLprep, which allowed uppercase and titlecase characters.]]

            <vspace blankLines='1'/>
          </t>
          
          <t>(PRECIS)
            A user name MUST consist only of Unicode code points that conform to the "NameClass"
            base string class defined in <xref target='FRAMEWORK'/>.

            <vspace blankLines='1'/>

            [[OPEN ISSUE: SASLprep allowed spaces in user names, should they be allowed here?]]

            <vspace blankLines='1'/>
          </t>
          
          <t>All characters MUST be mapped using Unicode Normalization Form C (NFC).

            <vspace blankLines='1'/>

             [[OPEN ISSUE: This differs from SASLprep, which used NFKC.]]

            <vspace blankLines='1'/>
          </t>

          <t>
            After performing all of the above steps a user name MUST NOT be zero bytes in length.
          </t>

        </list>
      </t>
      
      <t>
        With regard to directionality, the "Bidi Rule" provided in <xref target='IDNA-BIDI'/> applies.
      </t>

      <t>As noted in the Introduction, all code points and blocks not explicitly allowed in the PRECIS NameClass are disallowed; this includes private use characters, surrogate code points, and the other code points and blocks defined as "Prohibited Output" in Section 2.3 of RFC 4013.</t>

      <t>[[TODO: Double-check that all SASLprep prohibited output is indeed disallowed by the PRECIS NameClass.]]
      </t>

    </section>

    <section title='Password Preparation' anchor='password-prep'>

      <t>
        A password MUST be processed as follows,
        where the operations specified MUST be completed in the order shown (note that some steps can be combined
        and performed at the same time):
      </t>
      <t>
        <list style='numbers'>

          <t>
            (MAPPING 1) non-ASCII space characters from the "N" category defined under Section 6.14 of <xref target='FRAMEWORK'/>
            MUST be mapped to SPACE (U+0020).
            <vspace blankLines='1'/>
          </t>

          <t>
            (MAPPING 2) Characters from the "M" category defined under Section 6.13 MUST be mapped to nothing (this category includes all of the "characters commonly mapped to nothing" from Appendix B.1 of <xref target='STRINGPREP'/>), except U+1806 MONGOLIAN TODO SOFT HYPHEN).
            <vspace blankLines='1'/>
          </t>

          <t>
            [[OPEN ISSUE: Map HasCompat ("Q") category?]]
            <vspace blankLines='1'/>
          </t>

          <t>
            (PRECIS)
            A password MUST consist only of Unicode code points that conform to the "FreeClass"
            base string class defined in <xref target='FRAMEWORK'/>.
            <vspace blankLines='1'/>
          </t>

          <t>
            All characters MUST be mapped using Unicode Normalization Form C (NFC).
            <vspace blankLines='1'/>
            [[OPEN ISSUE: Use NFKC as in the original SASLprep?]]
            <vspace blankLines='1'/>
          </t>

          <t>
            After performing all of the above steps, a password MUST NOT be zero bytes in length.
          </t>

        </list>
      </t>

      <t>
        With regard to directionality, the "Bidi Rule" provided in <xref target='IDNA-BIDI'/> applies.
      </t>

      <t>As noted in the Introduction, all code points and blocks not explicitly allowed in the PRECIS FreeClass are disallowed; this includes private use characters, surrogate code points, and the other code points and blocks defined as "Prohibited Output" in Section 2.3 of RFC 4013.</t>

      <t>[[TODO: Double-check that all SASLprep prohibited output is indeed disallowed by the PRECIS FreeClass.]]</t>

    </section>

    <section title="ToDo">
      <t>Compare output of the new algorithms on Unicode 3.2 data with SASLprep and make sure that the PRECIS and KITTEN WGs are comfortable with the changes in which Unicode characters are allowed/disallowed (if any).</t>
    </section>
    
  <section title="Security Considerations" anchor="security">
    <section title="Password Strength" anchor="security-passwords">
      <t>The ability to include a wide range of characters in passwords is intended to increase the potential for creating a strong password with high entropy.  However, in practice, the ability to include such characters needs to be weighed against the possible need to reproduce those characters on a various devices using various input methods.</t>
    </section>
    <section title="Reuse of PRECIS" anchor="security-precis">
      <t>The security considerations described in <xref target="FRAMEWORK"/> apply to the "NameClass" and "FreeClass" base string classes used in this document for user names and passwords, respectively.</t>
    </section>
    <section title="Reuse of Unicode" anchor="security-unicode">
      <t>The security considerations described in <xref target='UTR39'/> apply to the use of Unicode characters in user names and passwords.</t>
    </section>
  </section>

  <section title="IANA Considerations" anchor="iana">
    <section title="Use of NameClass" anchor="iana-nameclass">
      <t>The IANA shall add an entry to the PRECIS Usage Registry for reuse of the PRECIS NameClass in SASL, as follows:</t>
      <t>
        <list style='hanging'>
          <t hangText='Application Protocol:'>SASL/Kerberos.</t>
          <t hangText='Base Class:'>NameClass.</t>
          <t hangText='Subclassing:'>Yes. See <xref target='username-prep'/> of RFC &rfc.number;.</t>
          <t hangText='Directionality:'>The "Bidi Rule" defined in RFC 5893 applies.</t>
          <t hangText='Casemapping:'>Uppercase and titlecase code points are mapped to their lowercase equivalents.</t>
          <t hangText='Normalization:'>NFC.</t>
          <t hangText='Specification:'>RFC &rfc.number;.</t>
        </list>
      </t>
    </section>
    <section title="Use of FreeClass" anchor="iana-freeclass">
      <t>The IANA shall add an entry to the PRECIS Usage Registry for reuse of the PRECIS FreeClass in SASL, as follows:</t>
      <t>
        <list style='hanging'>
          <t hangText='Application Protocol:'>SASL/Kerberos.</t>
          <t hangText='Base Class:'>FreeClass</t>
          <t hangText='Subclassing:'>No.</t>
          <t hangText='Directionality:'>The "Bidi Rule" defined in RFC 5893 applies.</t>
          <t hangText='Casemapping:'>None.</t>
          <t hangText='Normalization:'>NFC.</t>
          <t hangText='Specification:'>RFC &rfc.number;.</t>
        </list>
      </t>
    </section>
  </section>

  </middle>

  <back>

    <references title="Normative References">

<reference anchor='FRAMEWORK'>
<front>
<title>Precis Framework: Handling Internationalized Strings in Protocols</title>
<author initials='M' surname='Blanchet' fullname='Marc Blanchet'>
    <organization>Viagenie</organization>
</author>
<author initials='P' surname='Saint-Andre' fullname='Peter Saint-Andre'>
    <organization>Cisco</organization>
</author>
<date month='October' day='30' year='2011' />
<abstract><t>Application protocols that make use of Unicode code points in protocol strings need to prepare such strings in order to perform comparison operations (e.g., for purposes of authentication or authorization).  In general, this problem has been labeled the "preparation and comparison of internationalized strings" or "PRECIS".  This document defines a framework that enables application protocols to prepare various classes of strings in a way that depends on the properties of Unicode code points.  Because this framework does not depend on large tables of Unicode code points as in stringprep (RFC 3454), it is more agile with regard to changes in the underlying Unicode database and thus provides improved flexibility to application protocols.  A specification that uses this framework either can directly use the base string classes defined in this document or can subclass the base string classes as needed.  This framework uses an approach similar to that of the revised internationalized domain names in applications (IDNA) technology (RFC 5890, RFC 5891, RFC 5892, RFC 5893, RFC 5894) and thus adheres to the high-level design goals described in RFC 4690, albeit for application technologies other than the Domain Name System (DNS).  This document obsoletes RFC 3454.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-ietf-precis-framework-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-precis-framework-01.txt' />
</reference>


<reference anchor="KEYWORDS">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass.  Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date month='March' year='1997' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL
      NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
      &quot;OPTIONAL&quot; in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='14486' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5661' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>

<reference anchor="UNICODE">
  <front>
    <title>The Unicode Standard, Version 3.2.0</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date year="2000" />
  </front>
  <annotation>
    The Unicode Standard, Version 3.2.0 is defined by The Unicode Standard,
Version 3.0 (Reading, MA, Addison-Wesley, 2000. ISBN 0-201-61633-5), as amended
by the Unicode Standard Annex #27: Unicode 3.1
(http://www.unicode.org/reports/tr27/) and by the Unicode Standard Annex #28:
Unicode 3.2 (http://www.unicode.org/reports/tr28/). 
  </annotation>
</reference>

    </references>

    <references title="Informative References">

<reference anchor='RFC4616'>
<front>
<title>The PLAIN Simple Authentication and Security Layer (SASL) Mechanism</title>
<author initials='K.' surname='Zeilenga' fullname='K. Zeilenga'>
<organization /></author>
<date year='2006' month='August' />
<abstract>
<t>This document defines a simple clear-text user/password Simple Authentication and Security Layer (SASL) mechanism called the PLAIN mechanism.  The PLAIN mechanism is intended to be used, in combination with data confidentiality services provided by a lower layer, in protocols that lack a simple password authentication command. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='4616' />
<format type='TXT' octets='20270' target='http://www.rfc-editor.org/rfc/rfc4616.txt' />
</reference>

<reference anchor='RFC5802'>
<front>
<title>Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms</title>
<author initials='C.' surname='Newman' fullname='C. Newman'>
<organization /></author>
<author initials='A.' surname='Menon-Sen' fullname='A. Menon-Sen'>
<organization /></author>
<author initials='A.' surname='Melnikov' fullname='A. Melnikov'>
<organization /></author>
<author initials='N.' surname='Williams' fullname='N. Williams'>
<organization /></author>
<date year='2010' month='July' />
<abstract>
<t>The secure authentication mechanism most widely deployed and used by Internet application protocols is the transmission of clear-text passwords over a channel protected by Transport Layer Security (TLS). There are some significant security concerns with that mechanism, which could be addressed by the use of a challenge response authentication mechanism protected by TLS. Unfortunately, the challenge response mechanisms presently on the standards track all fail to meet requirements necessary for widespread deployment, and have had success only in limited use.&lt;/t>&lt;t> This specification describes a family of Simple Authentication and Security Layer (SASL; RFC 4422) authentication mechanisms called the Salted Challenge Response Authentication Mechanism (SCRAM), which addresses the security concerns and meets the deployability requirements. When used in combination with TLS or an equivalent security layer, a mechanism from this family could improve the status quo for application protocol authentication and provide a suitable choice for a mandatory-to-implement mechanism for future application protocol standards. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='5802' />
<format type='TXT' octets='59049' target='http://www.rfc-editor.org/rfc/rfc5802.txt' />
</reference>

      
      <reference anchor='IDNA-BIDI'>
        <front>
          <title>Right-to-Left Scripts for Internationalized Domain Names for Applications (IDNA)</title>
          <author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'>
            <organization />
          </author>
          <author initials='C.' surname='Karp' fullname='C. Karp'>
            <organization />
          </author>
          <date year='2010' month='August' />
          <abstract>
            <t>The use of right-to-left scripts in Internationalized Domain Names (IDNs) has presented several challenges.  This memo provides a new Bidi rule for Internationalized Domain Names for Applications (IDNA) labels, based on the encountered problems with some scripts and some shortcomings in the 2003 IDNA Bidi criterion. [STANDARDS-TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name='RFC' value='5893' />
        <format type='TXT' octets='38870' target='http://www.rfc-editor.org/rfc/rfc5893.txt' />
      </reference>

      <reference anchor='IDNA-DEFS'>
        <front>
          <title>Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework</title>
          <author initials='J.' surname='Klensin' fullname='J. Klensin'>
            <organization />
          </author>
          <date year='2010' month='August' />
          <abstract>
            <t>This document is one of a collection that, together, describe the protocol and usage context for a revision of Internationalized Domain Names for Applications (IDNA), superseding the earlier version.  It describes the document collection and provides definitions and other material that are common to the set. [STANDARDS TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name='RFC' value='5890' />
        <format type='TXT' octets='54245' target='http://www.rfc-editor.org/rfc/rfc5890.txt' />
      </reference>

      <reference anchor='IDNA-PROTO'>
        <front>
          <title>Internationalized Domain Names in Applications (IDNA): Protocol</title>
          <author initials='J.' surname='Klensin' fullname='J. Klensin'>
            <organization />
          </author>
          <date year='2010' month='August' />
          <abstract>
            <t>This document is the revised protocol definition for Internationalized Domain Names (IDNs).  The rationale for changes, the relationship to the older specification, and important terminology are provided in other documents.  This document specifies the protocol mechanism, called Internationalized Domain Names in Applications (IDNA), for registering and looking up IDNs in a way that does not require changes to the DNS itself.  IDNA is only meant for processing domain names, not free text. [STANDARDS TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name='RFC' value='5891' />
        <format type='TXT' octets='38105' target='http://www.rfc-editor.org/rfc/rfc5891.txt' />
      </reference>

<reference anchor='I18N-TERMS'>
<front>
<title>Terminology Used in Internationalization in the IETF</title>
<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>
<author initials='J' surname='Klensin' fullname='John Klensin'>
    <organization />
</author>
<date month='April' day='21' year='2011' />
<abstract><t>This document provides a glossary of terms used in the IETF when discussing internationalization.  The purpose is to help frame discussions of internationalization in the various areas of the IETF and to help introduce the main concepts to IETF participants.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-hoffman-rfc3536bis-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-hoffman-rfc3536bis-02.txt' />
</reference>

<reference anchor='IDNA-RATIONALE'>
<front>
<title>Internationalized Domain Names for Applications (IDNA): Background, Explanation, and Rationale</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>Several years have passed since the original protocol for Internationalized Domain Names (IDNs) was completed and deployed.  During that time, a number of issues have arisen, including the need to update the system to deal with newer versions of Unicode.  Some of these issues require tuning of the existing protocols and the tables on which they depend.  This document provides an overview of a revised system and provides explanatory material for its components.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>
<seriesInfo name='RFC' value='5894' />
<format type='TXT' octets='115174' target='http://www.rfc-editor.org/rfc/rfc5894.txt' />
</reference>

<reference anchor="SASL">
<front>
<title>Simple Authentication and Security Layer (SASL)</title>
<author initials='A.' surname='Melnikov' fullname='A. Melnikov' role="editor">
<organization /></author>
<author initials='K.' surname='Zeilenga' fullname='K. Zeilenga' role="editor">
<organization /></author>
<date year='2006' month='June' />
<abstract>
<t>&lt;p>The Simple Authentication and Security Layer (SASL) is a framework for providing authentication and data security services in connection-oriented protocols via replaceable mechanisms. It provides a structured interface between protocols and mechanisms. The resulting framework allows new protocols to reuse existing mechanisms and allows old protocols to make use of new mechanisms. The framework also provides a protocol for securing subsequent protocol exchanges within a data security layer.&lt;/p>&lt;p> This document describes how a SASL mechanism is structured, describes how protocols include support for SASL, and defines the protocol for carrying a data security layer over a connection. In addition, this document defines one SASL mechanism, the EXTERNAL mechanism.&lt;/p>&lt;p> This document obsoletes RFC 2222. [STANDARDS TRACK]&lt;/p></t></abstract></front>
<seriesInfo name='RFC' value='4422' />
<format type='TXT' octets='73206' target='ftp://ftp.isi.edu/in-notes/rfc4422.txt' />
</reference>

<reference anchor="STRINGPREP">
<front>
<title>Preparation of Internationalized Strings ("stringprep")</title>
<author initials='P.' surname='Hoffman' fullname='P.  Hoffman'>
<organization /></author>
<author initials='M.' surname='Blanchet' fullname='M.  Blanchet'>
<organization /></author>
<date month='December' year='2002' /></front>
<seriesInfo name='RFC' value='3454' />
<format type='TXT' octets='138684' target='ftp://ftp.isi.edu/in-notes/rfc3454.txt' />
</reference>

<reference anchor="UTR39" target='http://unicode.org/reports/tr39/'>
  <front>
    <title>Unicode Technical Report #39: Unicode Security Mechanisms</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date month="August" year="2010" />
  </front>
</reference>


    </references>

    <section title="Differences from RFC 4013" anchor="diffs">
      <t>Based on consensus derived from implementation and deployment experience as well as formal interoperability testing, the following substantive modifications were made from RFC 3920.</t>
      <t>
        <list style='symbols'>

          <t>A single SASLprep algorithm was replaced by two separate algorithms:
             one for user names and another for passwords.</t>
          
          <t>The new preparation algorithms use PRECIS instead of a Stringprep profile.
          The algorithms are now Unicode version independent.</t>
        </list>
      </t>
    </section>

    <section title="Acknowledgements" anchor="acks">
      
      <t>This document is partially based on text from RFC 4013.</t>
      
    </section>

  </back>

</rfc>
