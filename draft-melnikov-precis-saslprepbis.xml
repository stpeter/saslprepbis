<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<rfc category="std" docName="draft-melnikov-precis-saslprepbis-01" ipr="trust200902" obsoletes="4013">

  <front>

    <title abbrev="PRECIS: Usernames and Passwords">Preparation and Comparison of Internationalized Strings Representing Simple User Names and User Secrets</title>

    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>1899 Wynkoop Street, Suite 600</street>
          <city>Denver</city>
          <region>CO</region>
          <code>80202</code>
          <country>USA</country>
        </postal>
        <phone>+1-303-308-3282</phone>
        <email>psaintan@cisco.com</email>
      </address>
    </author>
    <author initials="A." surname="Melnikov" fullname="Alexey Melnikov">
      <organization>Isode Ltd</organization>
      <address>
        <postal>
          <street>5 Castle Business Village</street>
          <street>36 Station Road</street>
          <city>Hampton</city>
          <region>Middlesex</region>
          <code>TW12 2BX</code>
          <country>UK</country>
        </postal>
        <email>Alexey.Melnikov@isode.com</email>
      </address>
    </author>

    <date year="2012"/>

    <area>Applications</area>
    <workgroup>Precis</workgroup>
    <keyword>Username</keyword>
    <keyword>Password</keyword>
    <keyword>Unicode</keyword>
    <keyword>SASLprep</keyword>

    <abstract>
      <t>This document describes how to prepare Unicode strings representing simple user names and user secrets, primarily for purposes of comparison.  This profile is intended to be used by Simple Authentication and Security Layer (SASL) mechanisms (such as PLAIN and SCRAM-SHA-1), as well as other protocols that exchange simple user names or user secrets.  This document obsoletes RFC 4013.</t>
    </abstract>

  </front>

  <middle>

  <section title="Introduction" anchor="intro">

    <section title="Overview" anchor="overview">
      <t>The use of simple user names and user secrets in authentication and authorization is pervasive on the Internet.  To increase the likelihood that user name and user secret input and comparison both work in ways that make sense for typical users throughout the world, this document defines rules for preparing and comparing internationalized strings that represent simple user names and user secrets.</t>
      <t>The algorithms defined in this document assume that all strings are comprised of characters from the Unicode character set <xref target="UNICODE"/>.</t>
      <t>The algorithms are designed for use in Simple Authentication and Security Layer (SASL) <xref target="RFC4422"/> mechanisms, such as PLAIN <xref target="RFC4616"/> and SCRAM-SHA-1 <xref target="RFC5802"/>.  They can be applicable where simple user names and user secrets are used.  This profile is not intended for use in preparing identifier strings that are not simple user names (e.g., email addresses, domain names, distinguished names), nor in cases where identifier strings or secret strings are not character data or require different handling (e.g., case folding).</t>
      <t>This document builds upon the PRECIS framework defined in <xref target='FRAMEWORK'/>, which differs fundamentally from the stringprep technology <xref target='RFC3454'/> used in SASLprep <xref target='RFC4013'/>.  The primary difference is that stringprep profiles allow all characters except those which are explicitly disallowed, whereas PRECIS profiles disallow all characters except those which are explicitly allowed (this "inclusion model" was originally used for internationalized domain names in <xref target='RFC5891'/>; see <xref target='RFC5894'/> for further discussion).  It is important to keep this distinction in mind when comparing this document to RFC 4013.</t>
      <t>This document obsoletes RFC 4013.</t>
    </section>

    <section title="Terminology" anchor="terms">
      <t>Many important terms used in this document are defined in <xref target='FRAMEWORK'/>, <xref target='RFC4422'/>, <xref target='RFC5890'/>, <xref target='RFC6365'/>, and <xref target='UNICODE'/>.</t>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119'/>.</t>
    </section>

  </section>

  <section title='Simple User Names' anchor='username'>

    <section title='Definition' anchor='username-definition'>
      <t>Some SASL mechanisms (e.g., CRAM-MD5, DIGEST-MD5, and SCRAM) specify that the authentication identity used in the context of such mechanisms is a "simple user name" (see Section 2 of <xref target='RFC4422'/> as well as <xref target='RFC4013'/>).  However, the exact form of a simple user name in any particular mechanism or deployment thereof is a local matter, and a simple user name does not necessarily map to an application identifier such as the localpart of an email address.</t>
      <t>For purposes of preparation and comparison of authentication identities, this document specifies that a simple user name is a string of <xref target='UNICODE'/> code points, encoded using UTF-8 <xref target='RFC3629'/>, and structured as an ordered sequence of simpleparts (where the complete simple user name can consist of a single simplepart or a space-separated sequence of simpleparts).</t>
      <t>Therefore the syntax for a simple user name is defined as follows using the Augmented Backus-Naur Form (ABNF) as specified in <xref target="RFC5234"/>.</t>
      <figure>
        <artwork><![CDATA[
   simpleusername = simplepart [1*(SP simplepart)]
   simplepart     = 1*(simplepoint)
                    ;
                    ; a "simplepoint" is a UTF-8 encoded Unicode
                    ; code point that conforms to the simplepart 
                    ; subclass of the "NameClass" string class
                    ; defined in draft-ietf-precis-framework
                    ;
        ]]></artwork>
      </figure>
    </section>
    <section title='Preparation' anchor='username-preparation'>
      <t>A simple user name MUST NOT be zero bytes in length.  This rule is to be enforced after any mapping or normalization of code points.</t>
      <t>Each simplepart of a simple user name MUST be treated as follows, where the operations specified MUST be completed in the order shown:</t>
      <t>
        <list style='numbers'>
          <t>Map uppercase and titlecase characters to their lowercase equivalents.<vspace blankLines='1'/></t>
          <t>Optionally apply additional mappings, such as those defined in <xref target='MAPPINGS'/>.<vspace blankLines='1'/></t>
          <t>Apply Unicode Normalization Form C (NFC) to all characters.</t>
        </list>
      </t>
      <t>With regard to directionality, the "Bidi Rule" provided in <xref target='RFC5893'/> applies.</t>
    </section>
    <section title='Migration' anchor='username-migration'>
      <t>The rules defined in the previous section differ slightly from those defined by the SASLprep specification <xref target='RFC4013'/>.  Therefore, deployments that currently use SASLprep will need to scrub existing data when migrating to use of the PRECIS simplepart subclass.  In particular:</t>
      <t>
        <list style='symbols'>
          <t>SASLprep mapped non-ASCII spaces to ASCII space (U+0020), whereas the PRECIS simplepart subclass entirely disallows non-ASCII spaces.  For migration purposes, deployments need to convert non-ASCII space characters to ASCII space in simple user names.<vspace blankLines='1'/></t>
          <t>SASLprep mapped the "characters commonly mapped to nothing" from Appendix B.1 of <xref target='RFC3454'/>) to nothing, whereas the PRECIS simplepart subclass entirely disallows such characters, which correspond to the code points from the "M" category defined under Section 6.13 of <xref target='FRAMEWORK'/> (with the exception of U+1806 MONGOLIAN TODO SOFT HYPHEN, which was commonly mapped to nothing in Unicode 3.2 but at the time of this writing is allowed by Unicode 6.1).  For migration purposes, deployments need to remove code points from the PRECIS "M" category in simple user names.<vspace blankLines='1'/></t>
          <t>SASLprep allowed uppercase and titlecase characters, whereas the PRECIS simplepart subclass maps uppercase and titlecase characters to their lowercase equivalents.  For migration purposes, deployments can either convert uppercase and titlecase characters to their lowercase equivalents in simple user names (thus losing the case information) or preserve uppercase and titlecase characters and ignore them when comparing simple user names.<vspace blankLines='1'/></t>
          <t>SASLprep specified the use of Unicode Normalization Form KC (NFKC), whereas the PRECIS simplepart subclass uses Unicode Normalization Form C (NFC).  In practice this change is unlikely to cause significant problems, because NFKC provides methods for mapping Unicode code points with compatibility equivalents to those equivalents, whereas the PRECIS simplepart subclass entirely disallows Unicode code points with compatibility equivalents.  For migration purposes, deployments need to search their simple user names for Unicode code points with compatibility equivalents and map those code points to their compatibility equivalents.</t>
        </list>
      </t>
      <t>All code points and blocks not explicitly allowed in the PRECIS NameClass are disallowed; this includes private use characters, surrogate code points, and the other code points and blocks defined as "Prohibited Output" in Section 2.3 of RFC 4013.</t>
    </section>
  </section>

  <section title='User Secrets' anchor='secrets'>
    <section title='Definition' anchor='secrets-definition'>
      <t>For purposes of preparation and comparison of user secrets (i.e., passwords and passphrases), this document specifies that a user secret is a string of <xref target='UNICODE'/> code points, encoded using UTF-8 <xref target='RFC3629'/>, and structured as an ordered sequence of wordparts (where the complete secret can consist of a single wordpart or a space-separated sequence of wordparts).</t>
      <t>Therefore the syntax for a user secret is defined as follows using the Augmented Backus-Naur Form (ABNF) as specified in <xref target="RFC5234"/>.</t>
      <figure>
        <artwork><![CDATA[
   usersecret     = wordpart [1*(SP wordpart)]
   wordpart       = 1*(wordpoint)
                    ;
                    ; a "wordpoint" is a UTF-8 encoded Unicode
                    ; code point that conforms to the wordpart 
                    ; subclass of the "FreeClass" string class
                    ; defined in draft-ietf-precis-framework
                    ;
        ]]></artwork>
      </figure>
    </section>
    <section title='Preparation' anchor='secrets-preparation'>
      <t>A user secret MUST NOT be zero bytes in length.  This rule is to be enforced after any mapping or normalization of code points.</t>
      <t>Each wordpart of a user secret MUST be treated as follows, where the operations specified MUST be completed in the order shown:</t>
      <t>
        <list style='numbers'>
          <t>Map non-ASCII spaces to ASCII space (U+0020).</t>
          <t>Map the code points from the "M" category defined under Section 6.13 of <xref target='FRAMEWORK'/> to nothing.</t>
          <t>Apply Unicode Normalization Form C (NFC) to all characters.</t>
        </list>
      </t>
      <t>With regard to directionality, the "Bidi Rule" provided in <xref target='RFC5893'/> applies.</t>
    </section>
    <section title='Migration' anchor='secret-migration'>
      <t>The rules defined in the previous section differ slightly from those defined by the SASLprep specification <xref target='RFC4013'/>.  In particular:</t>
      <t>
        <list style='symbols'>
          <t>SASLprep specified the use of Unicode Normalization Form KC (NFKC), whereas the PRECIS wordpart subclass uses Unicode Normalization Form C (NFC).  Because NFKC is more aggressive about finding matches than NFC, in practice this change is unlikely to cause significant problems and indeed will probably result in fewer false positives when comparing user secrets.</t>
        </list>
      </t>
      <t>All code points and blocks not explicitly allowed in the PRECIS FreeClass are disallowed; this includes private use characters, surrogate code points, and the other code points and blocks defined as "Prohibited Output" in Section 2.3 of RFC 4013.</t>
    </section>
  </section>

  <section title="Open Issues">
    <t>We need to compare the output obtained when applying the new algorithms to Unicode 3.2 and Unicode 6.1 data to the output obtained when applying SASLprep to Unicode 3.2 data, then make sure that the PRECIS and KITTEN WGs are comfortable with the changes in which Unicode characters are allowed/disallowed (if any).</t>
  </section>
    
  <section title="Security Considerations" anchor="security">
    <section title="Password Strength" anchor="security-passwords">
      <t>The ability to include a wide range of characters in passwords is intended to increase the potential for creating a strong password with high entropy.  However, in practice, the ability to include such characters needs to be weighed against the possible need to reproduce those characters on a various devices using various input methods.</t>
    </section>
    <section title="Reuse of PRECIS" anchor="security-precis">
      <t>The security considerations described in <xref target="FRAMEWORK"/> apply to the "NameClass" and "FreeClass" base string classes used in this document for user names and passwords, respectively.</t>
    </section>
    <section title="Reuse of Unicode" anchor="security-unicode">
      <t>The security considerations described in <xref target='UTR39'/> apply to the use of Unicode characters in user names and passwords.</t>
    </section>
  </section>

  <section title="IANA Considerations" anchor="iana">
    <section title="Use of NameClass" anchor="iana-nameclass">
      <t>The IANA shall add an entry to the PRECIS Usage Registry for reuse of the PRECIS NameClass in SASL, as follows:</t>
      <t>
        <list style='hanging'>
          <t hangText='Application Protocol:'>SASL/Kerberos.</t>
          <t hangText='Base Class:'>NameClass.</t>
          <t hangText='Subclassing:'>Yes: "simplepart". See <xref target='username-preparation'/> of RFC &rfc.number;.</t>
          <t hangText='Directionality:'>The "Bidi Rule" defined in RFC 5893 applies.</t>
          <t hangText='Casemapping:'>Uppercase and titlecase code points are mapped to their lowercase equivalents.</t>
          <t hangText='Normalization:'>NFC.</t>
          <t hangText='Specification:'>RFC &rfc.number;.</t>
        </list>
      </t>
    </section>
    <section title="Use of FreeClass" anchor="iana-freeclass">
      <t>The IANA shall add an entry to the PRECIS Usage Registry for reuse of the PRECIS FreeClass in SASL, as follows:</t>
      <t>
        <list style='hanging'>
          <t hangText='Application Protocol:'>SASL/Kerberos.</t>
          <t hangText='Base Class:'>FreeClass</t>
          <t hangText='Subclassing:'>No.</t>
          <t hangText='Directionality:'>The "Bidi Rule" defined in RFC 5893 applies.</t>
          <t hangText='Casemapping:'>None.</t>
          <t hangText='Normalization:'>NFC.</t>
          <t hangText='Specification:'>RFC &rfc.number;.</t>
        </list>
      </t>
    </section>
  </section>

  </middle>

  <back>

    <references title="Normative References">

<reference anchor='FRAMEWORK'>
<front>
<title>Precis Framework: Handling Internationalized Strings in Protocols</title>
<author initials='M' surname='Blanchet' fullname='Marc Blanchet'>
    <organization>Viagenie</organization>
</author>
<author initials='P' surname='Saint-Andre' fullname='Peter Saint-Andre'>
    <organization>Cisco</organization>
</author>
<date month='October' day='30' year='2011' />
<abstract><t>Application protocols that make use of Unicode code points in protocol strings need to prepare such strings in order to perform comparison operations (e.g., for purposes of authentication or authorization).  In general, this problem has been labeled the "preparation and comparison of internationalized strings" or "PRECIS".  This document defines a framework that enables application protocols to prepare various classes of strings in a way that depends on the properties of Unicode code points.  Because this framework does not depend on large tables of Unicode code points as in stringprep (RFC 3454), it is more agile with regard to changes in the underlying Unicode database and thus provides improved flexibility to application protocols.  A specification that uses this framework either can directly use the base string classes defined in this document or can subclass the base string classes as needed.  This framework uses an approach similar to that of the revised internationalized domain names in applications (IDNA) technology (RFC 5890, RFC 5891, RFC 5892, RFC 5893, RFC 5894) and thus adheres to the high-level design goals described in RFC 4690, albeit for application technologies other than the Domain Name System (DNS).  This document obsoletes RFC 3454.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-ietf-precis-framework-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-precis-framework-01.txt' />
</reference>

<reference anchor="RFC2119">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass.  Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date month='March' year='1997' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:
<list>
<t>
      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL
      NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
      &quot;OPTIONAL&quot; in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='14486' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5661' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>

<reference anchor='RFC3629'>

<front>
<title>UTF-8, a transformation format of ISO 10646</title>
<author initials='F.' surname='Yergeau' fullname='F. Yergeau'>
<organization /></author>
<date year='2003' month='November' />
<abstract>
<t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values.  This memo obsoletes and replaces RFC 2279.</t></abstract></front>
<seriesInfo name='STD' value='63' />
<seriesInfo name='RFC' value='3629' />
<format type='TXT' octets='33856' target='http://www.rfc-editor.org/rfc/rfc3629.txt' />
</reference>

<reference anchor='RFC5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker'>
<organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'>
<organization /></author>
<date year='2008' month='January' />
<abstract>
<t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF.  It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='STD' value='68' />
<seriesInfo name='RFC' value='5234' />
<format type='TXT' octets='26359' target='http://www.rfc-editor.org/rfc/rfc5234.txt' />
</reference>

<reference anchor="UNICODE">
  <front>
    <title>The Unicode Standard, Version 3.2.0</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date year="2000" />
  </front>
  <annotation>
    The Unicode Standard, Version 3.2.0 is defined by The Unicode Standard,
Version 3.0 (Reading, MA, Addison-Wesley, 2000. ISBN 0-201-61633-5), as amended
by the Unicode Standard Annex #27: Unicode 3.1
(http://www.unicode.org/reports/tr27/) and by the Unicode Standard Annex #28:
Unicode 3.2 (http://www.unicode.org/reports/tr28/). 
  </annotation>
</reference>

    </references>

    <references title="Informative References">

<reference anchor='MAPPINGS'>
<front>
<title>Mapping characters for PRECIS classes</title>
<author initials='Y' surname='Yoneya' fullname='Yoshiro Yoneya'>
    <organization />
</author>
<author initials='T' surname='NEMOTO' fullname='Takahiro NEMOTO'>
    <organization />
</author>
<date month='February' day='10' year='2012' />
<abstract><t>Preparation and comparison of internationalized strings ("PRECIS") Framework [I-D.ietf-precis-framework] is defining several classes of strings for preparation and comparison.  In the document, case mapping is defined because many of protocols handle case sensitive or case insensitive string comparison and therefore preparation of string is mandatory.  As described in IDNA mapping [RFC5895] and PRECIS problem statement [I-D.ietf-precis-problem-statement], mappings in internationalized strings are not limited to case, but also width, delimiters and/or other specials are taken into consideration.  This document considers mappings other than case mapping in PRECIS context.</t></abstract>
</front>
<seriesInfo name='Internet-Draft' value='draft-yoneya-precis-mappings-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-yoneya-precis-mappings-01.txt' />
</reference>

<reference anchor="RFC3454">
<front>
<title>Preparation of Internationalized Strings ("stringprep")</title>
<author initials='P.' surname='Hoffman' fullname='P.  Hoffman'>
<organization /></author>
<author initials='M.' surname='Blanchet' fullname='M.  Blanchet'>
<organization /></author>
<date month='December' year='2002' /></front>
<seriesInfo name='RFC' value='3454' />
<format type='TXT' octets='138684' target='ftp://ftp.isi.edu/in-notes/rfc3454.txt' />
</reference>

<reference anchor='RFC4013'>
<front>
<title>SASLprep: Stringprep Profile for User Names and Passwords</title>
<author initials='K.' surname='Zeilenga' fullname='K. Zeilenga'>
<organization /></author>
<date year='2005' month='February' />
<abstract>
<t>This document describes how to prepare Unicode strings representing user names and passwords for comparison.  The document defines the "SASLprep" profile of the "stringprep" algorithm to be used for both user names and passwords.  This profile is intended to be used by Simple Authentication and Security Layer (SASL) mechanisms (such as PLAIN, CRAM-MD5, and DIGEST-MD5), as well as other protocols exchanging simple user names and/or passwords. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='4013' />
<format type='TXT' octets='13051' target='http://www.rfc-editor.org/rfc/rfc4013.txt' />
</reference>

<reference anchor="RFC4422">
<front>
<title>Simple Authentication and Security Layer (SASL)</title>
<author initials='A.' surname='Melnikov' fullname='A. Melnikov' role="editor">
<organization /></author>
<author initials='K.' surname='Zeilenga' fullname='K. Zeilenga' role="editor">
<organization /></author>
<date year='2006' month='June' />
<abstract>
<t>&lt;p>The Simple Authentication and Security Layer (SASL) is a framework for providing authentication and data security services in connection-oriented protocols via replaceable mechanisms. It provides a structured interface between protocols and mechanisms. The resulting framework allows new protocols to reuse existing mechanisms and allows old protocols to make use of new mechanisms. The framework also provides a protocol for securing subsequent protocol exchanges within a data security layer.&lt;/p>&lt;p> This document describes how a SASL mechanism is structured, describes how protocols include support for SASL, and defines the protocol for carrying a data security layer over a connection. In addition, this document defines one SASL mechanism, the EXTERNAL mechanism.&lt;/p>&lt;p> This document obsoletes RFC 2222. [STANDARDS TRACK]&lt;/p></t></abstract></front>
<seriesInfo name='RFC' value='4422' />
<format type='TXT' octets='73206' target='ftp://ftp.isi.edu/in-notes/rfc4422.txt' />
</reference>

<reference anchor='RFC4616'>
<front>
<title>The PLAIN Simple Authentication and Security Layer (SASL) Mechanism</title>
<author initials='K.' surname='Zeilenga' fullname='K. Zeilenga'>
<organization /></author>
<date year='2006' month='August' />
<abstract>
<t>This document defines a simple clear-text user/password Simple Authentication and Security Layer (SASL) mechanism called the PLAIN mechanism.  The PLAIN mechanism is intended to be used, in combination with data confidentiality services provided by a lower layer, in protocols that lack a simple password authentication command. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='4616' />
<format type='TXT' octets='20270' target='http://www.rfc-editor.org/rfc/rfc4616.txt' />
</reference>

<reference anchor='RFC5802'>
<front>
<title>Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms</title>
<author initials='C.' surname='Newman' fullname='C. Newman'>
<organization /></author>
<author initials='A.' surname='Menon-Sen' fullname='A. Menon-Sen'>
<organization /></author>
<author initials='A.' surname='Melnikov' fullname='A. Melnikov'>
<organization /></author>
<author initials='N.' surname='Williams' fullname='N. Williams'>
<organization /></author>
<date year='2010' month='July' />
<abstract>
<t>The secure authentication mechanism most widely deployed and used by Internet application protocols is the transmission of clear-text passwords over a channel protected by Transport Layer Security (TLS). There are some significant security concerns with that mechanism, which could be addressed by the use of a challenge response authentication mechanism protected by TLS. Unfortunately, the challenge response mechanisms presently on the standards track all fail to meet requirements necessary for widespread deployment, and have had success only in limited use.&lt;/t>&lt;t> This specification describes a family of Simple Authentication and Security Layer (SASL; RFC 4422) authentication mechanisms called the Salted Challenge Response Authentication Mechanism (SCRAM), which addresses the security concerns and meets the deployability requirements. When used in combination with TLS or an equivalent security layer, a mechanism from this family could improve the status quo for application protocol authentication and provide a suitable choice for a mandatory-to-implement mechanism for future application protocol standards. [STANDARDS-TRACK]</t></abstract></front>
<seriesInfo name='RFC' value='5802' />
<format type='TXT' octets='59049' target='http://www.rfc-editor.org/rfc/rfc5802.txt' />
</reference>

      <reference anchor='RFC5890'>
        <front>
          <title>Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework</title>
          <author initials='J.' surname='Klensin' fullname='J. Klensin'>
            <organization />
          </author>
          <date year='2010' month='August' />
          <abstract>
            <t>This document is one of a collection that, together, describe the protocol and usage context for a revision of Internationalized Domain Names for Applications (IDNA), superseding the earlier version.  It describes the document collection and provides definitions and other material that are common to the set. [STANDARDS TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name='RFC' value='5890' />
        <format type='TXT' octets='54245' target='http://www.rfc-editor.org/rfc/rfc5890.txt' />
      </reference>

      <reference anchor='RFC5891'>
        <front>
          <title>Internationalized Domain Names in Applications (IDNA): Protocol</title>
          <author initials='J.' surname='Klensin' fullname='J. Klensin'>
            <organization />
          </author>
          <date year='2010' month='August' />
          <abstract>
            <t>This document is the revised protocol definition for Internationalized Domain Names (IDNs).  The rationale for changes, the relationship to the older specification, and important terminology are provided in other documents.  This document specifies the protocol mechanism, called Internationalized Domain Names in Applications (IDNA), for registering and looking up IDNs in a way that does not require changes to the DNS itself.  IDNA is only meant for processing domain names, not free text. [STANDARDS TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name='RFC' value='5891' />
        <format type='TXT' octets='38105' target='http://www.rfc-editor.org/rfc/rfc5891.txt' />
      </reference>

      <reference anchor='RFC5893'>
        <front>
          <title>Right-to-Left Scripts for Internationalized Domain Names for Applications (IDNA)</title>
          <author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'>
            <organization />
          </author>
          <author initials='C.' surname='Karp' fullname='C. Karp'>
            <organization />
          </author>
          <date year='2010' month='August' />
          <abstract>
            <t>The use of right-to-left scripts in Internationalized Domain Names (IDNs) has presented several challenges.  This memo provides a new Bidi rule for Internationalized Domain Names for Applications (IDNA) labels, based on the encountered problems with some scripts and some shortcomings in the 2003 IDNA Bidi criterion. [STANDARDS-TRACK]</t>
          </abstract>
        </front>
        <seriesInfo name='RFC' value='5893' />
        <format type='TXT' octets='38870' target='http://www.rfc-editor.org/rfc/rfc5893.txt' />
      </reference>

<reference anchor='RFC5894'>
<front>
<title>Internationalized Domain Names for Applications (IDNA): Background, Explanation, and Rationale</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2010' month='August' />
<abstract>
<t>Several years have passed since the original protocol for Internationalized Domain Names (IDNs) was completed and deployed.  During that time, a number of issues have arisen, including the need to update the system to deal with newer versions of Unicode.  Some of these issues require tuning of the existing protocols and the tables on which they depend.  This document provides an overview of a revised system and provides explanatory material for its components.  This document is not an Internet Standards Track specification; it is published for informational purposes.</t></abstract></front>
<seriesInfo name='RFC' value='5894' />
<format type='TXT' octets='115174' target='http://www.rfc-editor.org/rfc/rfc5894.txt' />
</reference>

<reference anchor='RFC6365'>
<front>
<title>Terminology Used in Internationalization in the IETF</title>
<author initials='P.' surname='Hoffman' fullname='P. Hoffman'>
<organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'>
<organization /></author>
<date year='2011' month='September' />
<abstract>
<t>This document provides a list of terms used in the IETF when discussing internationalization.  The purpose is to help frame discussions of internationalization in the various areas of the IETF and to help introduce the main concepts to IETF participants.  This memo documents an Internet Best Current Practice.</t></abstract></front>
<seriesInfo name='BCP' value='166' />
<seriesInfo name='RFC' value='6365' />
<format type='TXT' octets='103155' target='http://www.rfc-editor.org/rfc/rfc6365.txt' />
</reference>

<reference anchor="UTR39" target='http://unicode.org/reports/tr39/'>
  <front>
    <title>Unicode Technical Report #39: Unicode Security Mechanisms</title>
    <author>
      <organization>The Unicode Consortium</organization>
    </author>
    <date month="August" year="2010" />
  </front>
</reference>

    </references>

    <section title="Differences from RFC 4013" anchor="diffs">
      <t>The following substantive modifications were made from RFC 3920.</t>
      <t>
        <list style='symbols'>
          <t>A single SASLprep algorithm was replaced by two separate algorithms: one for user names and another for passwords.</t>
          <t>The new preparation algorithms use PRECIS instead of a stringprep profile.  The new algorithms work independenctly of Unicode versions.</t>
          <t>As recommended in the PRECIS framwork, changed the Unicode normalization form from NFKC to NFC.</t>
        </list>
      </t>
    </section>

    <section title="Acknowledgements" anchor="acks">
      
      <t>This document borrows some text from RFC 4013 and RFC 6120.</t>
      
    </section>

  </back>

</rfc>
